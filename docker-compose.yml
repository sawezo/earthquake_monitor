version: '3.7'

services: 
    generator:
        build: ./dev/datagen
        image: generator:1.0
        depends_on:
            - kafka
        environment:
            - KAFKA_BROKER_URL=kafka:9093

    zookeeper:
        image: wurstmeister/zookeeper:3.4.6
        ports:
            - 2181:2181
    
    kafka:
        image: wurstmeister/kafka:2.12-2.2.1
        ports:
            - "9092:9092"
        expose:
            - "9093"
        environment:
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            KAFKA_LISTENERS: INSIDE://kafka:9093
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock                      
        depends_on:
            - zookeeper

    jobmanager:
        build: ./backend/flink/
        image: pyflink/playgrounds:1.13.0-rc2
        hostname: "jobmanager"
        volumes:
            - ./backend/flink/src:/opt/jobs
        expose:
            - "6123"
        ports:
            - "8081:8081"
        command: jobmanager
        environment:
            - JOB_MANAGER_RPC_ADDRESS=jobmanager
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
              
    taskmanager:
        image: pyflink/playgrounds:1.13.0-rc2
        volumes:
            - ./backend/flink/src:/opt/jobs
        expose:
            - "6121"
            - "6122"
        depends_on:
            - jobmanager
        command: taskmanager
        links:
            - jobmanager:jobmanager
        environment:
            - JOB_MANAGER_RPC_ADDRESS=jobmanager
            - TASK_MANAGER_NUMBER_OF_TASK_SLOTS=20

    mongo_db:
        image: mongo:latest
        ports:
            - "29017:27017"
        command: --auth
        environment:
            - MONGO_ADMIN_USER=${MONGO_ADMIN_USER}
            - MONGO_ADMIN_PASSWORD=${MONGO_ADMIN_PASSWORD}
            - MONGO_USER=${MONGO_USER}
            - MONGO_PASSWORD=${MONGO_PASSWORD}
        container_name: "mongo_db"
        volumes:
            - ./backend/mongo/setup:/setup
            - ./backend/mongo/db:/data/db

    postgres_db:
        container_name: "postgres_db"
        image: postgres:alpine
        restart: always
        ports:
            - "5432:5432"
        expose:
            - "5432"
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        volumes:
            - ./backend/postgres/db:/var/lib/postgresql/data
            - ./backend/postgres/setup/bootstrap.sql:/docker-entrypoint-initdb.d/bootstrap.sql

    dev:
        container_name: "dev"
        image: jupyter/datascience-notebook
        volumes:
            - ./notebooks:/home/jovyan/work
        ports:
            - 8880:8888
        environment:
            - MONGO_USER=${MONGO_USER}
            - MONGO_PASSWORD=${MONGO_PASSWORD}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
            - KAFKA_BROKER_URL=kafka:9093
        depends_on:
            - postgres_db
            - mongo_db

    # back_end:
    #     build: ./backend
    #     volumes:
    #         - ./backend:/backend
    #     environment:
    #         KAFKA_BROKER_URL: kafka:9093
    #     depends_on:
    #         - kafka
    #         # - mongo

    # front_end:
        # build: ./front_end
        # volumes:
        #     - ./front_end:/front_end
        # ports:
        #     - 5000:5000
        # environment:
        #     KAFKA_BROKER_URL: kafka:9093
        # depends_on:
        #     - back_end